#textdomain wesnoth-vampirism



#define ABILITY_VAMPIRISM
    #the [vampirism] tag is used for the lua code to check ability by tag
    [vampirism]
        id=vampirism
        name= _ "vampirism"
        female_name= _ "female^vampirism"
        description= _ "This unit is a vampire, with the following advantages and downsides:

-more hitpoints and damage
-access to the vampire menu via rightclicking on the unit
-can gain Blood by attacking enemies with a drain attack (gives Blood equal to half the damage dealt)
-can gain Blood by standing in villages, since you will drink blood from villagers (however, blood gain from villages is halved at daytime, as sunlight makes it harder to hunt)
-Blood is needed for vampire powers, and you passively lose a bit of Blood each turn. if your Blood reaches 0, you gain the 'hunger' ability, which makes your bite attack have berserk, makes non-draining attacks very weak, and has some other downsides
-increased cold resistance but reduced arcane/fire resistances
-at day, take damage from sunlight every turn unless you are in a castle or village tile, or have Slumber active
-your attacks deal an additional 25% less damage at day, on top of the normal ToD damage reduction"
    [/vampirism]
    [leadership]
        id=vampirism_day_debuff
        sub=25
        affect_self=yes
        [filter]
            [filter_location]
                time_of_day=lawful
            [/filter_location]
        [/filter]
    [/leadership]
#enddef

#define ABILITY_VAMPIRE_HUNGER
    [dummy]
        id=vampire_hunger
        name= _ "hungry"
        female_name= _ "female^hungry"
        description= _ "This vampire is hungry from not having drank enough blood (Blood reached 0). This applies the following effects while active:

-66% damage to all non-draining attacks

bite attack gains +50% damage but loses backstab

bite attack gains berserk special

arcane resistance is reduced by an additional 20%

Hunger is removed when your blood is at least 40% of max blood."
    [/dummy]
    [leadership]
        id=vampirism_hunger_bitebuff
        add=50
        affect_self=yes
        [filter_weapon]
            name=vampire_bite
        [/filter_weapon]
    [/leadership]
    [leadership]
        id=vampirism_hunger_debuff
        sub=66
        affect_self=yes
        [filter_weapon]
            [not]
                special_id=drains
            [/not]
        [/filter_weapon]
    [/leadership]
    [resistance]
        id=vampirism_hunger_arcane_debuff
        sub=20
        max_value=100
        apply_to=arcane
        affect_self=yes
        affect_allies=no
    [/resistance]
    #berserk is applied directly via object
#enddef


#define TRAIT_VAMPIRE
    # Units with trait Vampire cannot be poisoned, or plagued, but can still be drained
    [trait]
        id=vampire
        availability="musthave"
        male_name= _ "vampire"
        female_name= _ "female^vampire"
        description= _ "Immune to poison, and plague"
        help_text= _ "<italic>text='Vampire'</italic> units are immune to poison and plague, and have access to various vampire powers. However, they require 100% more experience to advance normally."
        #added the XP increase to ensure vampires don't just quickly rush to level 3-4 while still having a low level of vampirism. It is also meant to reflect vampires being generally more stagnant.
        [effect]
            apply_to=max_experience
            increase=100%
        [/effect]
        [effect]
            apply_to=status
            add=unpoisonable
        [/effect]
#        [effect]
#            apply_to=status
#            add=undrainable
#        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
    [/trait]
#enddef

#define APPLY_VAMPIRE_STRENGTH_BONUS FILTER
    #foreach loop to be able to affect multiple vampires at once
    [store_unit]
        [filter]
            {FILTER}
            [and]
                ability=vampirism
            [/and]
        [/filter]
        variable=vampirism_buffed
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_buffed
        variable=this_item_strength#so this can be more safely included inside other foreach loops
        index_var=e
        [do]
            #reset the old buff
            [remove_object]
                id=$this_item_strength.id
                object_id=vampire_strength_bonus
            [/remove_object]

            {VARIABLE tmp_vampire_hp_buff "$($this_item_strength.variables.vampirism_strength_bonus_level * 15)"}
            {VARIABLE tmp_vampire_dmg_buff "$($this_item_strength.variables.vampirism_strength_bonus_level * 10)"}

            [object]
                silent=yes
                duration=forever
                id=vampire_strength_bonus
                take_only_once=no
                [filter]
                    id=$this_item_strength.id
                [/filter]
                [effect]
                    apply_to=hitpoints
                    increase=$tmp_vampire_hp_buff|%
                    increase_total=$tmp_vampire_hp_buff|%
                [/effect]
                [effect]
                    apply_to=attack
                    increase_damage=$tmp_vampire_dmg_buff|%
                [/effect]
            [/object]    
        [/do]
    [/foreach]
    {CLEAR_VARIABLE vampirism_buffed}
    {CLEAR_VARIABLE tmp_vampire_hp_buff}
    {CLEAR_VARIABLE tmp_vampire_dmg_buff}
#enddef

#define TURN_INTO_VAMPIRE FILTER
	#foreach loop to be able to turn multiple units into vampires at once
    [store_unit]
        [filter]
        	{FILTER}
            [not]
                {VAMPIRE_EXCLUDED_FILTER}
            [/not]
        [/filter]
        variable=vampirism_converted
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_converted
        index_var=i
        [do]
        	{VARIABLE this_item.variables.vampirism_level 1}
        	{VARIABLE this_item.variables.vampirism_max_blood 20}#vampires start with 20 blood capacity, and gain 5 each levelup
        	{VARIABLE this_item.variables.vampirism_blood "$($this_item.variables.vampirism_max_blood| / 2)"}
        	{VARIABLE this_item.variables.vampirism_xp 0}
        	{VARIABLE this_item.variables.vampirism_max_xp "$($this_item.variables.vampirism_level| * 50 * $vampirism_xp_modifier_mult|)"}
            {VARIABLE_OP this_item.variables.vampirism_max_xp round floor}#vampirism_xp_modifier_mult turns the number into a float which takes up UI space, so we round it down
            {VARIABLE this_item.variables.vampirism_strength_bonus_level 1}#equal to vampire level by default. TO AVOID SKILLS AND LEVELUPS, CONFLICTING DO NOT SET IT ON LEVELUP, ONLY ADD IT
            {VARIABLE this_item.variables.vampirism_skillpoints 2}#used for buying vampire powers

            {VARIABLE this_item.variables.vampirism_blood_from_village 4}#blood gained from standing in a village for a turn. can be upgraded
            {VARIABLE this_item.variables.vampirism_blood_from_village_greatfeast 30}#blood gained from the Great Feast power. upgraded at the same time as you upgrade Great Feast
            {VARIABLE this_item.variables.vampirism_hunger_rate 1}#how much Blood you lose per turn automatically (increases with vampire level, so it's not something you can ignore TOO easily even when you have high blood capacity)
            #TODO: make the hunger rate show in the UI

            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
            [object]
                silent=yes
                duration=forever
                id=vampire_initial_object
                take_only_once=no
                [filter]
                    id=$this_item.id
                [/filter]
                [effect]
                    apply_to=image_mod
                    #slight tint, to make vampires more distinct
                    #TODO: make tints optional and toggleable
                    add="~BLEND(128,64,128,0.3)"
                [/effect]
                [effect]
                    apply_to=alignment
                    set=chaotic
                [/effect]
           		[effect]
           		    apply_to=new_ability
           		    [abilities]
           		    	{ABILITY_VAMPIRISM}
           		    [/abilities]
           		[/effect]
                #become more resistant to cold, but weaker to arcane/fire
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        arcane=20
                        fire=10
                        cold=-20
                    [/resistance]
                [/effect]
                [effect]
                    apply_to=new_attack
                    name=vampire_bite#to avoid overlap with any existing bite attacks
                    description= _ "bite"
                    icon=attacks/fangs.png
                    type=pierce
                    range=melee
                    [specials]
			            {WEAPON_SPECIAL_DRAIN}
			            {WEAPON_SPECIAL_BACKSTAB}
                    [/specials]
                    damage=3
                    number=2
                    attack_weight=2#make the bite attack used/recommended more often, since blood is very important for vampires
                [/effect]
                [effect]
                    apply_to=attack
                    name=vampire_bite
                    increase_damage=3
                    times=per level
                [/effect]
       			[effect]
       			    apply_to=new_animation
    				[attack_anim]
    				    [filter_attack]
    				        name=vampire_bite
    				    [/filter_attack]
    				    start_time=-250
    				    [frame]
    				        duration=400
    				    [/frame]
    				    {SOUND:HIT_AND_MISS bite.ogg {SOUND_LIST:MISS} -100}
    				[/attack_anim]
       			[/effect]
                [effect]
                    apply_to=new_animation
                    [extra_anim]
                        flag=sunlight_damage
                        [missile_frame]
                            halo="halo/holy/light-beam-[1~7,6~1].png:[30*6,130,70*6]"
                            offset=0.0
                            auto_vflip=no
                        [/missile_frame]
                        [frame]
                            duration=200
                            sound={SOUND_LIST:HOLY}
                        [/frame]
                        [frame]
                            duration=200
                            sound=fire.wav
                        [/frame]
                    [/extra_anim]
                [/effect]
            [/object]
            #UPD: this has been scrapped for now, instead bite now has always "+3 damage per level" instead of +2 (melee-only units now get the advantage of Drain Life ranged attack upgrade being more useful to them)   
            ##bonus bite damage if a unit starts as melee-only (doesn't cover cases with a weak ranged attack like spearman, but better than nothing)
            #[object]
            #    silent=yes
            #    duration=forever
            #    [filter]
            #        id=$this_item.id
            #        [not]
            #        	[has_attack]
            #        		range=ranged
            #        	[/has_attack]
            #        [/not]
            #    [/filter]
            #    [effect]
            #        apply_to=attack
            #        name=vampire_bite
            #        increase_damage=1
            #        times=per level
            #    [/effect]
            #[/object]
    		[modify_unit]
    		    [filter]
    		    	id=$this_item.id
    		    [/filter]
                {TRAIT_VAMPIRE}
    		[/modify_unit]
            #apply vampirism strength bonus
            {APPLY_VAMPIRE_STRENGTH_BONUS id=$this_item.id}
        [/do]
    [/foreach]

    {CLEAR_VARIABLE vampirism_converted}
#enddef

#decided to tie the "xp from gaining blood" to the floating text macro, so that stuff like "quietly fully refill all blood" doesn't give XP. maybe change that later
#define VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP UNITVAR X Y AMOUNT
    #logic to ensure the blood text shows only the correct number of blood gained when it's close to max, and doesn't show anything when already full
    {VARIABLE tmp_blood_visible_amount {AMOUNT}}

    {IF_VAR tmp_blood_visible_amount greater_than "$(${UNITVAR}.variables.vampirism_max_blood - ${UNITVAR}.variables.vampirism_blood)" (
    [then]
        {VARIABLE tmp_blood_visible_amount "$(${UNITVAR}.variables.vampirism_max_blood - ${UNITVAR}.variables.vampirism_blood)"}
    [/then]
    )}
    {IF_VAR tmp_blood_visible_amount greater_than 0 (
    [then]

    [floating_text]
       x,y={X},{Y}
       text=_"<span color='#ff0000'>+$tmp_blood_visible_amount| blood</span>"
    [/floating_text]

    #gain a bit of vampire xp every time you gain blood
    [modify_unit]
        [filter]
            id=${UNITVAR}.id
        [/filter]
        {VARIABLE_OP vampirism_xp add "$($tmp_blood_visible_amount| * 0.3)"}
        {VARIABLE vampirism_xp_recently_modified yes}#needed for levelups
    [/modify_unit]
    {VAMPIRE_CHECK_XP_OF_ALL_VAMPIRES_FOR_LEVELUP}
    [/then]
    )}
    {CLEAR_VARIABLE tmp_blood_visible_amount}
#enddef

#define VAMPIRISM_GAIN_BLOOD FILTER AMOUNT
    #foreach loop to be able to affect multiple vampires at once
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=vampirism_fed
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_fed
        index_var=i
        [do]
            {VARIABLE_OP this_item.variables.vampirism_blood add {AMOUNT}}

            {IF_VAR this_item.variables.vampirism_blood greater_than $this_item.variables.vampirism_max_blood (
            [then]
                {VARIABLE this_item.variables.vampirism_blood $this_item.variables.vampirism_max_blood}
            [/then]
            )}
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]

            #remove hunger if you are at or above 40% blood capacity:

            {IF_VAR this_item.variables.vampirism_blood greater_than_equal_to "$($this_item.variables.vampirism_max_blood * 0.4)" (
            [then]
                [remove_object]
                    id=$this_item.id
                    object_id=vampire_hunger
                [/remove_object]
            [/then]
            )}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE vampirism_fed}
#enddef

#define VAMPIRE_LEVELUP FILTER
    #foreach loop to be able to affect multiple vampires at once
    [store_unit]
        [filter]
            {FILTER}
        [/filter]
        variable=vampirism_levelup
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_levelup
        variable=this_item_levelup#so this can be more safely included inside other foreach loops, just in case
        index_var=l
        [do]
            #until vampire level 10, vampire leveling happens as normal, past that point you get "vampire AMLA"
            #TODO: make it clearer to players how vampire AMLA works, maybe make the vampire XP menu turn purple after hitting max level


            #shared code for both normal and AMLA levelups:

            {IF_VAR tmp_vampire_no_xp_loss_on_levelup not_equals yes (
            [then]
                {VARIABLE_OP this_item_levelup.variables.vampirism_xp sub $this_item_levelup.variables.vampirism_max_xp}
            [/then]
            )}

            [if]
            {VARIABLE_CONDITIONAL this_item_levelup.variables.vampirism_level greater_than_equal_to 10}#10 is max level
            [then]

            #vampire AMLA

            #AMLA gives a slight bonus to max blood capacity

            {VARIABLE_OP this_item_levelup.variables.vampirism_max_blood add 5}

            #vampire AMLA gives 5 skillpoints per AMLA for now

            {VARIABLE_OP this_item_levelup.variables.vampirism_skillpoints add 5}

            #vampire AMLA increases max vampire XP by 20%, instead of a flat +50
            #TODO: test whether that's too harsh and whether a simple flat +50 (multipled by xp mult) may be better instead

            {VARIABLE this_item_levelup.variables.vampirism_max_xp "$($this_item_levelup.variables.vampirism_max_xp| * 1.2)"}
            {VARIABLE_OP this_item_levelup.variables.vampirism_max_xp round floor}#vampirism_xp_modifier_mult turns the number into a float which takes up UI space, so we round it down

            [unstore_unit]
                variable=this_item_levelup
                find_vacant=no
            [/unstore_unit]
            [/then]
            [else]

            {VARIABLE_OP this_item_levelup.variables.vampirism_level add 1}

            {VARIABLE_OP this_item_levelup.variables.vampirism_max_blood add 5}
            {VARIABLE this_item_levelup.variables.vampirism_max_xp "$($this_item_levelup.variables.vampirism_level| * 50 * $vampirism_xp_modifier_mult|)"}
            {VARIABLE_OP this_item_levelup.variables.vampirism_max_xp round floor}#vampirism_xp_modifier_mult turns the number into a float which takes up UI space, so we round it down
            {VARIABLE_OP this_item_levelup.variables.vampirism_strength_bonus_level add 1}#equal to vampire level by default. TO AVOID SKILLS AND LEVELUPS, CONFLICTING DO NOT SET IT ON LEVELUP, ONLY ADD IT

            #gain <1 + new vampire level / 2, rounded up> skill points with each vampire level
            {VARIABLE_OP this_item_levelup.variables.vampirism_skillpoints add "$(1 + $this_item_levelup.variables.vampirism_level| / 2)"}#used for buying vampire powers
            {VARIABLE_OP this_item_levelup.variables.vampirism_skillpoints round ceil}

            [unstore_unit]
                variable=this_item_levelup
                find_vacant=no
            [/unstore_unit]

            #apply vampirism strength bonus
            {APPLY_VAMPIRE_STRENGTH_BONUS id=$this_item_levelup.id}

            #extra effects based on new level

            [switch]
                variable=this_item_levelup.variables.vampirism_level
                [case]
                    value=1
                    #none, vampires already start at lvl1
                [/case]
                [case]
                    value=2
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level2_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        [effect]
                            apply_to=resistance
                            replace=no
                            [resistance]
                                arcane=10
                                cold=-10
                            [/resistance]
                        [/effect]
                    [/object]
                [/case]
                [case]
                    value=3
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level3_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                    [/object]                    
                [/case]
                [case]
                    value=4
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level4_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        [effect]
                            apply_to=resistance
                            replace=no
                            [resistance]
                                arcane=10
                                fire=10
                                cold=-10
                            [/resistance]
                        [/effect]
                    [/object]
                    #becoming a stronger vampire also makes you hungrier for blood
                    [modify_unit]
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        {VARIABLE_OP vampirism_hunger_rate add 1}
                    [/modify_unit]
                [/case]
                [case]
                    value=5
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level5_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                    [/object]                    
                [/case]
                [case]
                    value=6
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level6_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        [effect]
                            apply_to=level
                            increase=1
                        [/effect]
                        [effect]
                            apply_to=resistance
                            replace=no
                            [resistance]
                                arcane=10
                                cold=-10
                            [/resistance]
                        [/effect]
                    [/object]
                [/case]
                [case]
                    value=7
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level7_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                    [/object]
                    #becoming a stronger vampire also makes you hungrier for blood
                    [modify_unit]
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        {VARIABLE_OP vampirism_hunger_rate add 1}
                    [/modify_unit]
                [/case]
                [case]
                    value=8
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level8_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        [effect]
                            apply_to=resistance
                            replace=no
                            [resistance]
                                arcane=10
                                fire=10
                                cold=-10
                            [/resistance]
                        [/effect]
                    [/object]
                [/case]
                [case]
                    value=9
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level9_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                    [/object]
                [/case]
                [case]
                    value=10
                    [object]
                        silent=yes
                        duration=forever
                        id=vampire_level10_effects
                        take_only_once=no
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        [effect]
                            apply_to=level
                            increase=1
                        [/effect]
                        [effect]
                            apply_to=resistance
                            replace=no
                            [resistance]
                                arcane=10
                                cold=-10
                            [/resistance]
                        [/effect]
                    [/object]
                    #becoming a stronger vampire also makes you hungrier for blood
                    [modify_unit]
                        [filter]
                            id=$this_item_levelup.id
                        [/filter]
                        {VARIABLE_OP vampirism_hunger_rate add 1}
                    [/modify_unit]
                [/case]
            [/switch]
        [/else]
        [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE vampirism_levelup}
#enddef

#define VAMPIRE_CHECK_HUNGER UNITVAR
            [if]
            [have_unit]
                id=${UNITVAR}.id
                ability=vampirism
                [and]
                    formula="self.wml_vars.vampirism_blood = 0"
                [/and]
                [not]
                    ability=vampire_hunger
                [/not]
            [/have_unit]
            [then]

            [sound]
                name={SOUND_LIST:DRAKE_HIT}
            [/sound]
            [floating_text]
               x,y=${UNITVAR}.x,${UNITVAR}.y
               text=_"<span color='#ff0000'>Hunger!</span>"
            [/floating_text]

            [object]
                silent=yes
                duration=forever
                id=vampire_hunger
                take_only_once=no
                [filter]
                    id=${UNITVAR}.id
                [/filter]
                [effect]
                    apply_to=new_ability
                    [abilities]
                        {ABILITY_VAMPIRE_HUNGER}
                    [/abilities]
                [/effect]
                [effect]
                    apply_to=attack
                    name=vampire_bite
                    remove_specials=backstab
                    [set_specials]
                        mode=append
                        {WEAPON_SPECIAL_BERSERK}
                    [/set_specials]
                [/effect]
            [/object]

            [/then]
            [/if]
#enddef

#unused macro
##define VAMPIRE_CHECK_XP_FOR_LEVELUP UNITVAR
#            [if]
#            [have_unit]
#                id=${UNITVAR}.id
#                ability=vampirism
#                [and]
#                    formula="self.wml_vars.vampirism_xp >= self.wml_vars.vampirism_max_xp"
#                [/and]
#                [and]
#                    formula="self.wml_vars.vampirism_max_xp > 0"
#                [/and]
#            [/have_unit]
#            [then]
#
#            #delay to avoid overlap with blood floating text
#
#            [delay]
#                time=50
#            [/delay]
#
#            [sound]
#                name={SOUND_LIST:LICH_HIT}
#            [/sound]
#            [floating_text]
#               x,y=${UNITVAR}.x,${UNITVAR}.y
#               text=_"<span color='#ff0000'>Level up!</span>"
#            [/floating_text]
#
#            {VAMPIRE_LEVELUP id=${UNITVAR}.id}
#
#            [/then]
#            [/if]
##enddef

#define VAMPIRE_CHECK_XP_OF_ALL_VAMPIRES_FOR_LEVELUP
#    [chat]
#        message=_"trying to store vampires for levelup comparison"
#    [/chat]
    [store_unit]
        [filter]
            ability=vampirism
            [filter_wml]
                [variables]
                    vampirism_xp_recently_modified=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=vampirism_check_levelup
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_check_levelup
        index_var=f
        [do]
#            [chat]
#                message=_"comparing $this_item.variables.vampirism_xp| / $this_item.variables.vampirism_max_xp|"
#            [/chat]
            [if]
            {VARIABLE_CONDITIONAL this_item.variables.vampirism_xp greater_than_equal_to $this_item.variables.vampirism_max_xp}
            [then]
            #delay to avoid overlap with blood floating text

            [delay]
                time=50
            [/delay]

            [sound]
                name={SOUND_LIST:LICH_HIT}
            [/sound]
            [floating_text]
               x,y=$this_item.x,$this_item.y
               text=_"<span color='#ff0000'>Level up!</span>"
            [/floating_text]

            {VAMPIRE_LEVELUP id=$this_item.id}
            [/then]
            [/if]

            #clear the recently-modified xp variable to avoid the event triggering more than necessary

            [modify_unit]
                [filter]
                    id=$this_item.id
                [/filter]
                {CLEAR_VARIABLE vampirism_xp_recently_modified}
            [/modify_unit]
            
        [/do]
    [/foreach]
#enddef

#non-living units, vampires, status, or bats cannot be turned into vampires (bats are excluded because they would make Batform meaningless as there's no humanoid (or at least not-bat) form for the vampire)

#define VAMPIRE_EXCLUDED_FILTER
    race=bats
    [or]
        status=unplagueable
    [/or]
    [or]
        status=petrified
    [/or]
#enddef

#define VAMPIRISM_CHECK_IF_CURRENT_SIDE_IS_AI
    [lua]
        code=<<
local result = wesnoth.sync.evaluate_single(
  function()
    return { value = "no" }
  end,
  function()
    -- Called only on the client handling the current side, if it is an AI.
    return { value = "yes" }
  end)
wml.variables["vampirism_is_ai"..wesnoth.current.side] = result.value
        >>
    [/lua]
#enddef

[event]
	name=side turn 1#cannot do a start event due to the AI check, has to be turn 1 of each side
	id=vampirism_start
	first_time_only=no
    {VAMPIRISM_CHECK_IF_CURRENT_SIDE_IS_AI}

    [if]
    {VARIABLE_CONDITIONAL vampirism_start_vampires equals allleaders}
    [or]
    {VARIABLE_CONDITIONAL vampirism_start_vampires equals playerleaders}
    [and]
    {VARIABLE_CONDITIONAL vampirism_is_ai$side_number equals no}
    [/and]
    [/or]
    [then]

    [store_unit]
        [filter]
            side=$side_number
            canrecruit=yes
            [not]
                ability=vampirism
            [/not]
#now checked inside the loop
#            [not]
#                {VAMPIRE_EXCLUDED_FILTER}
#            [/not]
        [/filter]
        variable=vampirism_leader_candidates
        kill=no
    [/store_unit]
    [foreach]
        array=vampirism_leader_candidates
        index_var=i
        [do]
            [if]
            [have_unit]
                id=$this_item.id
                [not]
                    {VAMPIRE_EXCLUDED_FILTER}
                [/not]
            [/have_unit]
            [then]
            {TURN_INTO_VAMPIRE (
                id=$this_item.id
                [not]
                    {VAMPIRE_EXCLUDED_FILTER}
                [/not]
            )}

            #if starting level is higher than 1, level up the vampire leader upon converting

            {REPEAT "$($vampirism_starting_level - 1)" (
                {VARIABLE tmp_vampire_no_xp_loss_on_levelup yes}
                {VAMPIRE_LEVELUP id=$this_item.id}
                {CLEAR_VARIABLE tmp_vampire_no_xp_loss_on_levelup}
            )}
            [/then]
            [else]
            [message]
                speaker=narrator
                caption=_"Vampirism Warning!!!"
#TODO: find something else that fits
#                image="portraits/undead/draug.webp"
                side_for=$side_number
                message=_"Your leader type is incompatible with the Vampirism mod! Undead, other non-living units, and bats (since that wouldn't make sense with Bat Form turning a bat into a bat) cannot be vampires."
            [/message]
            [/else]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE vampirism_leader_candidates}
    [/then]
    [/if]
[/event]

[event]
	name=side turn
	id=vampirism_sunlight_damage
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
			ability=vampirism
            [filter_location]
                time_of_day=lawful
                [not]
                	#castles, keeps, and villages provide shelter from the sun
                	terrain=C*^*,K*^*,*^V*
                [/not]
            [/filter_location]
			[not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			[/not]
            #Slumber gives immunity to sunlight damage, and is intentionally a way to avoid sunlight when there's no castles or villages nearby
            [not]
                ability=vampire_slumber
            [/not]
		[/filter]
		variable=burned_vampires
		kill=no
	[/store_unit]
    [foreach]
        array=burned_vampires
        index_var=i
        [do]
        	{VARIABLE tmp_vampire_sun_damage "$(5 + $this_item.variables.vampirism_level| * 5)"}
            [animate_unit]
                flag=sunlight_damage
                [filter]
                    id=$this_item.id
                [/filter]
            [/animate_unit] 
			[harm_unit]
				[filter]
					id=$this_item.id
				[/filter]
				amount=$tmp_vampire_sun_damage
				experience=no
				fire_event=yes
				animate=yes
			[/harm_unit] 
        [/do]
    [/foreach]
    {CLEAR_VARIABLE burned_vampires}
    {CLEAR_VARIABLE tmp_vampire_sun_damage}
[/event]


[event]
    name=side turn
    id=vampirism_hunger
    first_time_only=no
    [store_unit]
        [filter]
            side=$side_number
            ability=vampirism
            [filter_location]
                [not]
                    #vampires can feed in villages each turn, so remove the hunger penalty there
                    terrain=*^V*
#rebalanced vampires so they can still feed in villages at day
#                    [not]
#                        #vampires cannot feed in villages at day because of sunlight, so they will still go hungry in a village, but at least they can hide from the sun. This is to encourage the Day Sleep mechanic to conserve blood instead of being able to just farm villages for blood at daytime
#                        time_of_day=lawful
#                    [/not]
                [/not]
            [/filter_location]
            #while in Slumber, you do not lose Blood points each turn
            [not]
                ability=vampire_slumber
            [/not]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=hungry_vampires
        kill=no
    [/store_unit]
    [foreach]
        array=hungry_vampires
        index_var=i
        [do]
            {VARIABLE_OP this_item.variables.vampirism_blood sub $this_item.variables.vampirism_hunger_rate}
            {IF_VAR this_item.variables.vampirism_blood less_than 0 (
            [then]
                {VARIABLE this_item.variables.vampirism_blood 0}
            [/then]
            )}
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
            {VAMPIRE_CHECK_HUNGER this_item}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE hungry_vampires}
[/event]

[event]
    name=side turn
    id=vampirism_feeding
    first_time_only=no
    [store_unit]
        [filter]
            side=$side_number
            ability=vampirism
            [filter_location]
                terrain=*^V*
                #now vampires CAN feed during daytime, but simply get half as much blood (this is to make design more intuitive and further reinforce the "put vampire in a village at day" design.)
                #[not]
                #    #vampires cannot feed in villages at day because of sunlight
                #    time_of_day=lawful
                #[/not]
            [/filter_location]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
            #while in Slumber, you cannot feed on villages
            [not]
                ability=vampire_slumber
            [/not]
        [/filter]
        variable=feeding_vampires
        kill=no
    [/store_unit]
    [foreach]
        array=feeding_vampires
        index_var=i
        [do]
            [sound]
                name=bite.ogg
            [/sound]
            [if]
            [have_location]
                x,y=$this_item.x,$this_item.y
                terrain=*^V*
                #sunlight makes it harder for vampires to hunt mortals to feed on, so blood gain is halved
                time_of_day=lawful
            [/have_location]
            [then]
            {VAMPIRISM_GAIN_BLOOD id=$this_item.id "$($this_item.variables.vampirism_blood_from_village / 2 )"}
            {VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP this_item $this_item.x $this_item.y "$($this_item.variables.vampirism_blood_from_village / 2)"}
            [/then]
            [else]
            {VAMPIRISM_GAIN_BLOOD id=$this_item.id $this_item.variables.vampirism_blood_from_village}
            {VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP this_item $this_item.x $this_item.y $this_item.variables.vampirism_blood_from_village}
            [/else]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE hungry_vampires}
[/event]

#TODO: (SCRAPPED IDEA) maybe make it so that the drained blood is limited by how much HP the enemy has left (otherwise you can farm blood a bit too quickly by insta killing weak wounded enemies)

#UPD: it's fine as is, the current system encourages killing with fangs, which also feeds into the existing "bonus vampire XP for drain kills" mechanic and makes thematic sense

[event]
    name=attacker_hits
    id=vampirism_blood_drain
    first_time_only=no
    [filter_attack]
        special_id=drains
    [/filter_attack]
    [filter]
        ability=vampirism
    [/filter]
    [filter_second]
        [not]
            status=undrainable
        [/not]
    [/filter_second]
    {VARIABLE tmp_blood_drained $damage_inflicted}
    #COMMENTED OUT FOR NOW, THE "100% blood drain if at full hp" mechanic MIGHT COMPLICATE BALANCING THE MOD, THINK LATER ABOUT WHETHER TO RE-ADD IT
    ##if vampire is at full HP, all drained HP is converted to blood, otherwise it's half drain healing, half blood
    #{IF_VAR unit.hitpoints less_than unit.max_hitpoints (
    #[then]
        {VARIABLE_OP tmp_blood_drained divide 2}
    #[/then]
    #)}
    {VARIABLE_OP tmp_blood_drained round floor}
    {VAMPIRISM_GAIN_BLOOD id=$unit.id $tmp_blood_drained}
    {VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP unit $unit.x $unit.y $tmp_blood_drained}
    {CLEAR_VARIABLE tmp_blood_drained}
[/event]

[event]
    name=defender_hits
    id=vampirism_blood_drain2
    first_time_only=no
    [filter_second_attack]
        special_id=drains
    [/filter_second_attack]
    [filter_second]
        ability=vampirism
    [/filter_second]
    [filter]
        [not]
            status=undrainable
        [/not]
    [/filter]
    {VARIABLE tmp_blood_drained $damage_inflicted}
    #COMMENTED OUT FOR NOW, THE "100% blood drain if at full hp" mechanic MIGHT COMPLICATE BALANCING THE MOD, THINK LATER ABOUT WHETHER TO RE-ADD IT
    ##if vampire is at full HP, all drained HP is converted to blood, otherwise it's half drain healing, half blood
    #{IF_VAR unit.hitpoints less_than unit.max_hitpoints (
    #[then]
        {VARIABLE_OP tmp_blood_drained divide 2}
    #[/then]
    #)}
    {VARIABLE_OP tmp_blood_drained round floor}
    {VAMPIRISM_GAIN_BLOOD id=$second_unit.id $tmp_blood_drained}
    {VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP second_unit $second_unit.x $second_unit.y $tmp_blood_drained}
    {CLEAR_VARIABLE tmp_blood_drained}
[/event]

#vampires get some vampire XP when killing anything

[event]
    name=die
    id=vampirism_kill_xp_nondrain
    first_time_only=no
    [filter_second]
        ability=vampirism
    [/filter_second]
    {IF_VAR unit.level equals 0 (
    [then]
    [modify_unit]
        [filter]
            id=$second_unit.id
        [/filter]
        {VARIABLE_OP vampirism_xp add 2}
    [/modify_unit]
    [/then]
    [else]
    [modify_unit]
        [filter]
            id=$second_unit.id
        [/filter]
        {VARIABLE_OP vampirism_xp add "$($unit.level| * 4)"}
        {VARIABLE vampirism_xp_recently_modified yes}#needed for levelups
    [/modify_unit]
    {VAMPIRE_CHECK_XP_OF_ALL_VAMPIRES_FOR_LEVELUP}

    [/else]
    )}
[/event]

#if a vampire kills a living enemy while using a draining attack, they gain additional vampire XP on top of the guaranteed vampire XP

#killing without drain gives half the normal kill XP worth of vampire XP, killing with drain gives 1.5x the normal XP worth of vampire XP

[event]
    name=die
    id=vampirism_kill_xp_drain
    first_time_only=no
    [filter_second_attack]
        special_id=drains
    [/filter_second_attack]
    [filter_second]
        ability=vampirism
    [/filter_second]
    [filter]
        [not]
            status=undrainable
        [/not]
    [/filter]
    {IF_VAR unit.level equals 0 (
    [then]
    [modify_unit]
        [filter]
            id=$second_unit.id
        [/filter]
        {VARIABLE_OP vampirism_xp add 4}
    [/modify_unit]
    [/then]
    [else]
    [modify_unit]
        [filter]
            id=$second_unit.id
        [/filter]
        {VARIABLE_OP vampirism_xp add "$($unit.level| * 8)"}
        {VARIABLE vampirism_xp_recently_modified yes}#needed for levelups
    [/modify_unit]
    {VAMPIRE_CHECK_XP_OF_ALL_VAMPIRES_FOR_LEVELUP}

    [/else]
    )}
[/event]


[event]
    name=side turn
    id=vampirism_slumber_time
    first_time_only=no
    [store_unit]
        [filter]
            side=$side_number
            ability=vampire_slumber
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=sleeping_vampires
        kill=no
    [/store_unit]
    [foreach]
        array=sleeping_vampires
        index_var=i
        [do]
            {VARIABLE_OP this_item.variables.vampirism_slumber_turns_left sub 1}
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
            {IF_VAR this_item.variables.vampirism_slumber_turns_left less_than_equal_to 0 (
            [then]
                [remove_object]
                    id=$this_item.id
                    object_id=vampire_slumber
                [/remove_object]                
            [/then]
            )}
        [/do]
    [/foreach]
    {CLEAR_VARIABLE sleeping_vampires}
[/event]

[event]
    name=preload
    id=vampire_preload_UI
    first_time_only=no
    [lua]
       code = << wesnoth.require "~add-ons/Vampirism/lua/vampirism_lua_functions.lua"

       vampirism_attach_unit_status_renderer()

       >>
    [/lua]
[/event]

[event]
    name=prestart
    id=vampirism_define_xp_modifier
    first_time_only=no
    {VARIABLE vampirism_xp_modifier_mult $vampirism_xp_modifier}
    {VARIABLE_OP vampirism_xp_modifier_mult divide 100}
[/event]

#define VAMPIRISM_MICRO_AIS SIDE
[store_side]
side={SIDE}
variable=vampirism_ai_currentside
[/store_side]

[if]
#checks if the side exists
{VARIABLE_CONDITIONAL vampirism_ai_currentside.side not_equals $vampirism_nonexistent_variable}
#[have_unit]
#    side={SIDE}
#removed, as it does not work in multiplayer with ai sides
#    [filter_side]
#        controller=ai
#    [/filter_side]
#[/have_unit]
[then]
    [micro_ai]
        side={SIDE}
        ai_type=coward
        action=add
        [filter]
            ability=vampirism_terrified
            [filter_location]
                [filter]
                    [filter_side]
                        [enemy_of]
                            side={SIDE}
                        [/enemy_of]
                    [/filter_side]
                [/filter]
                radius=10#radius for standing in place
#TODO: maybe add a wall filter here later?
#                [filter_radius]
#                    terrain=!,{SPARTAN_WALL_TERRAIN}
#                [/filter_radius]
            [/filter_location]
        [/filter]
        attack_if_trapped=no#do not try to attack when attacks left are equal to 0
        distance=5
        ca_score=170000#set below 200k so that this is triggered after goto_x/goto_y
    [/micro_ai]
[/then]
[/if]
{CLEAR_VARIABLE vampirism_ai_currentside}
#enddef

[event]
    name=prestart
    id=vampirism_define_micro_ais
    first_time_only=no
    {VAMPIRISM_MICRO_AIS 1}
    {VAMPIRISM_MICRO_AIS 2}
    {VAMPIRISM_MICRO_AIS 3}
    {VAMPIRISM_MICRO_AIS 4}
    {VAMPIRISM_MICRO_AIS 5}
    {VAMPIRISM_MICRO_AIS 6}
    {VAMPIRISM_MICRO_AIS 7}
    {VAMPIRISM_MICRO_AIS 8}
    {VAMPIRISM_MICRO_AIS 9}
[/event]


[event]
    name=side turn
    id=vampire_drain_aura
    first_time_only=no
    [store_unit]
        [filter]
            side=$side_number
            ability=vampire_drainaura
        [not]
        [filter_wml]
        [status]
            petrified=yes
        [/status]
        [/filter_wml]
        [/not]
        [/filter]
        variable=lifestealer
        kill=no
    [/store_unit]
    [foreach]
        array=lifestealer
        index_var=i
        [do]
    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$this_item.x,$this_item.y
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$side_number
                [/enemy_of]
            [/filter_side]
            [not]
            [filter_wml]
            [status]
                petrified=yes
            [/status]
            [or]
            [status]
                undrainable=yes
            [/status]
            [/or]
            [/filter_wml]
            [/not]
        [/filter]
        variable=lifesteal_target
        kill=no
    [/store_unit]

    {VARIABLE tmp_lifesteal_heal 0}

    [foreach]
        array=lifesteal_target
        variable=this_item_target#to avoid overlap with main loop
        index_var=i
        [do]
#since the array number is offset by one from the length (if there are 2 units, the length is 2, but the units are [0] and [1])

    [animate_unit]
        flag=drain_anim
        [filter]
            id=$this_item.id
        [/filter]
        [facing]
            x,y=$this_item_target.x,$this_item_target.y
        [/facing]
        hits=yes
    [/animate_unit]
#    [chat]
#        message=_"target: $lifesteal_target[$random].id, facing: $this_item.facing, random $random, length: $lifesteal_target.length"
#    [/chat]
    [harm_unit]
        [filter]
            id=$this_item_target.id
        [/filter]
        [filter_second]
            id=$this_item.id
        [/filter_second]
        amount=$this_item.variables.vampirism_level
#        alignment=$this_item.alignment
#        damage_type=fire
        fire_event=yes
        animate=yes
        experience=no
        kill=no
    [/harm_unit]
    {VARIABLE_OP tmp_lifesteal_heal add $this_item.variables.vampirism_level}

    [/do]
    [/foreach]

    #half the drained HP is given as healing, half is given as Blood

    {VARIABLE_OP tmp_lifesteal_heal multiply 0.5}
    {VARIABLE_OP tmp_lifesteal_heal round floor}

        [heal_unit]
            [filter]
                id=$this_item.id
            [/filter]
            amount=$tmp_lifesteal_heal
            animate=yes
            restore_statuses=no
        [/heal_unit]

    [delay]
        time=100
    [/delay]

    {VAMPIRISM_GAIN_BLOOD id=$this_item.id $tmp_lifesteal_heal}
    {VAMPIRISM_GAIN_BLOOD_FLOATTEXT_AND_XP this_item $this_item.x $this_item.y $tmp_lifesteal_heal}

    [/do]
    [/foreach]

    {CLEAR_VARIABLE lifestealer}
    {CLEAR_VARIABLE lifesteal_target}
    {CLEAR_VARIABLE tmp_lifesteal_heal}
[/event]