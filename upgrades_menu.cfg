#textdomain wesnoth-vampirism

#define ADD_VAMPIRE_UPGRADE_TO_LIST ID MIN_LEVEL SKILL_COST NAME DESCR ICON OTHER_PARAMS
    #this is the GLOBAL upgrade list, the "what upgrades has a specific vampire unlocked" data should be stored in unit variables instead
    [set_variables]
        name=vampirism_upgrades_list
        mode=append
        [value]
            id={ID}
            icon={ICON}
            name={NAME}
            descr={DESCR}
            full_descr="<span color='#ffff99'>"+{NAME}+"</span>: "+{DESCR}+$tmp_extra_note|
            #different text highlighting for unavailable upgrades
            full_descr_greyed="<span color='#999999'>"+{NAME}+"</span>: "+{DESCR}+$tmp_extra_note|
            skillpoint_cost={SKILL_COST}
            min_level={MIN_LEVEL}
            {OTHER_PARAMS}
        [/value]
    [/set_variables]
#enddef

#define HOPLITE_CREATE_CURRENT_UPGRADES_DIALOG_OPTIONS UNITVAR
    [foreach]
        array=vampirism_upgrades_list
        index_var=i
        [do]
            {IF_VAR {UNITVAR}.variables.vampire_upgrade_$this_item.id|_unlocked equals yes (
                [then]
                    [set_variables]
                        name=vampirism_currentupgrades_options
                        mode=append
                        [value]
                            image=$this_item.icon|
                            description=$this_item.full_descr|
                            [command]
                            [/command]
                        [/value]
                    [/set_variables]
                [/then]
            )}
        [/do]
    [/foreach]
#enddef

#TODO: expand this macro with similar logic as Spartan (required upgrades, etc.)

#define VAMPIRISM_GET_UPGRADE_NAME ID
    [foreach]
        array=vampirism_upgrades_list
        variable=this_item_get_upgrade
        index_var=i
        [do]
            [if]
                {VARIABLE_CONDITIONAL this_item_get_upgrade.id equals {ID}}
                [then]
                    {VARIABLE tmp_vampire_upgradename $this_item_get_upgrade.name}
                [/then]
            [/if]
        [/do]
    [/foreach]
#enddef

#define HOPLITE_CREATE_AVAILABLE_UPGRADES_DIALOG_OPTIONS UNITVAR
    [foreach]
        array=vampirism_upgrades_list
        index_var=i
        [do]
            {VARIABLE tmp_vampire_upgrade_greyedout no}
            {VARIABLE tmp_vampire_upgrade_greyedout_reason ""}

            {IF_VAR this_item.required_upgrades not_equals $emptyvar (
                [then]
                    #      [chat]
                    #         message="upgrade has requirements"
                    #      [/chat]
                    [set_variables]
                        name=tmp_required_upgrades_list
                        [split]
                            list=$this_item.required_upgrades
                            key=id
                            separator=,
                        [/split]
                    [/set_variables]

                    [foreach]
                        array=tmp_required_upgrades_list
                        index_var=e
                        [do]
                            #      [chat]
                            #         message="requirement id: $this_item.id|"
                            #      [/chat]

                            {IF_VAR {UNITVAR}.variables.vampire_upgrade_$this_item.id|_unlocked not_equals yes (
                                [then]
                                    {VARIABLE_OP tmp_missing_upgrades add 1}
                                [/then]
                            )}
                        [/do]
                    [/foreach]

                    {IF_VAR tmp_missing_upgrades greater_than 0 (
                        [then]

                            [foreach]
                                array=tmp_required_upgrades_list
                                index_var=e
                                [do]

                                    {IF_VAR tmp_requiredupgrades_text equals "" (
                                        [else]
                                            {VARIABLE tmp_requiredupgrades_text "$tmp_requiredupgrades_text|,"}
                                        [/else]
                                    )}

                                    {VAMPIRISM_GET_UPGRADE_NAME $this_item.id}

                                    {IF_VAR {UNITVAR}.variables.vampire_upgrade_$this_item.id|_unlocked equals yes (
                                        [then]
                                            {VARIABLE tmp_requiredupgrades_text _"$tmp_requiredupgrades_text|<span color='#99ff66'>$tmp_vampire_upgradename|</span>"}
                                        [/then]
                                        [else]
                                            {VARIABLE tmp_requiredupgrades_text _"$tmp_requiredupgrades_text|<span color='#ff6666'>$tmp_vampire_upgradename|</span>"}
                                        [/else]
                                    )}

                                    {CLEAR_VARIABLE tmp_vampire_upgradename}
                                [/do]
                            [/foreach]

                            {VARIABLE tmp_vampire_upgrade_greyedout yes}
                            {VARIABLE tmp_vampire_upgrade_greyedout_reason _"this upgrade requires the following upgrades: $tmp_requiredupgrades_text|"}
                [/then]
                )}
                {CLEAR_VARIABLE tmp_requiredupgrades_text}
                {CLEAR_VARIABLE tmp_required_upgrades_list}
                {CLEAR_VARIABLE tmp_missing_upgrades}
            [/then]
            )}

            {IF_VAR this_item.min_level greater_than ${UNITVAR}.variables.vampirism_level (
            [then]
                {VARIABLE tmp_vampire_upgrade_greyedout yes}
                {VARIABLE tmp_vampire_upgrade_greyedout_reason _"<span color='#ff9999'>You need a higher vampire level to buy this upgrade</span>"}
            [/then]
            )}

            {IF_VAR {UNITVAR}.variables.vampire_upgrade_$this_item.id|_unlocked not_equals yes (
                [then]


                {IF_VAR tmp_vampire_upgrade_greyedout equals yes (
                [then]
                    [set_variables]
                        name=vampirism_available_upgrades_options
                        mode=append
                        [value]
                            image=$this_item.icon|+"~GS()"
                            description=$this_item.full_descr_greyed|+_"            
Costs <span color='#ffff99'>$this_item.skillpoint_cost|</span> skill points, requires vampire level <span color='#ffff99'>$this_item.min_level|</span> or above
"+$tmp_vampire_upgrade_greyedout_reason|
                            [command]
                                [message]
                                    speaker=narrator
                                    caption=_"Vampirism Menu"
                    #TODO: find something else that fits
                    #                image="portraits/undead/draug.webp"
                                    side_for=$side_number
                                    message=$tmp_vampire_upgrade_greyedout_reason|
                                [/message]
                            [/command]
                        [/value]
                    [/set_variables]
                [/then]
                [else]
                    [set_variables]
                        name=vampirism_available_upgrades_options
                        mode=append
                        [value]
                            image=$this_item.icon|
                            description=$this_item.full_descr|+_"            
Costs <span color='#ffff99'>$this_item.skillpoint_cost|</span> skill points, requires vampire level <span color='#ffff99'>$this_item.min_level|</span> or above"
                            [command]
#                            	[chat]
#                            		message=_"applying upgrade $this_item.id| to id ${UNITVAR}.id|"
#                            	[/chat]
								{IF_VAR {UNITVAR}.variables.vampirism_skillpoints greater_than_equal_to $this_item.skillpoint_cost (
								[then]
    							[modify_unit]
    							    [filter]
    							        id=${UNITVAR}.id
    							    [/filter]
    							    #unlock the upgrade and spend the skillpoints
    							    {VARIABLE vampire_upgrade_$this_item.id|_unlocked yes}
	         						{VARIABLE_OP vampirism_skillpoints sub $this_item.skillpoint_cost}
    							[/modify_unit]
                                {VARIABLE tmp_vampire_current_upgrade_id $this_item.id}
                                {VARIABLE tmp_vampire_unit_id ${UNITVAR}.id}
                                [fire_event]
                                    id=vampire_upgrade_effect_event
                                [/fire_event]
								[/then]
								[else]
						            [message]
						                speaker=narrator
						                caption=_"Vampirism Menu"
						#TODO: find something else that fits
						#                image="portraits/undead/draug.webp"
						                side_for=$side_number
						                message=_"Not enough skill points for this upgrade!"
						            [/message]
								[/else]
								)}

                            [/command]
                        [/value]
                    [/set_variables]
                [/else]
                )}

                [/then]
            )}
            {CLEAR_VARIABLE tmp_vampire_upgrade_greyedout}
            {CLEAR_VARIABLE tmp_vampire_upgrade_greyedout_reason}
        [/do]
    [/foreach]
#enddef

#define VAMPIRE_UPGRADE_ALLOW_POWER_IN_BATFORM ID
    [modify_unit]
        [filter]
            id=$tmp_vampire_unit_id
        [/filter]
        {VARIABLE vampirism_can_use_power_in_batform_{ID} yes}
    [/modify_unit]
#enddef

#define VAMPIRE_UPGRADE_ALLOW_POWER_IN_SLUMBER ID
    [modify_unit]
        [filter]
            id=$tmp_vampire_unit_id
        [/filter]
        {VARIABLE vampirism_can_use_power_in_slumber_{ID} yes}
    [/modify_unit]
#enddef


[event]
    name=prestart
    id=vampirism_set_variables
    first_time_only=yes
#for campaigns, these variables only need to be defined once
#    {ADD_VAMPIRE_UPGRADE_TO_LIST ID 1 1 NAME DESCR ICON (
#        required_upgrades=
#    )}

    {ADD_VAMPIRE_UPGRADE_TO_LIST batform 1 1 _"Bat Form" _"Power: transform into a bat until manually toggled off. 
bat type depends on unit level (not vampire level)
Costs <span color='#ff0000'>10</span> Blood." icons/haste-fire-3.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST batpowers1 3 1 _"Bat Powers I" _"Passive: Can use the following powers in bat form: 
Blood Surge, Bat Swarm, Cloak of Darkness" icons/haste-royal-1.png (
        required_upgrades=batform
    )}

    {ADD_VAMPIRE_UPGRADE_TO_LIST agility 3 1 _"Vampiric Agility" _"Passive: +1 MP" icons/haste-fire-1.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST bloodsurge 1 1 _"Blood Surge" _"Power: Gain +33% damage to all attacks until your next turn. Costs <span color='#ff0000'>8</span> Blood." attacks/fist.png ()}

#BLOODHEAL IS AN UNUSED POWER FOR NOW, I TEMPORARILY COMMENTED OUT THE UPGRADE in the upgrade file!!!
#(the code works, it's just that I decided to make players need drain or Slumber heal well, and bloodheal messes with that balance)
#    {ADD_VAMPIRE_UPGRADE_TO_LIST bloodheal 1 1 _"Blood Heal" _"Power: Spend as much Blood as possible to heal yourself
#at a cost of 1 Blood per 1 hitpoint.
#(for example, if you are at 10/50 HP and have 10 blood, you will spend all 10 blood and be healed to 20 HP, if you have 45/50 HP and have 10 blood, you will spend 5 blood to heal 5 HP)" icons/potion_red_medium.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST raiseundead 2 1 _"Raise Undead" _"Power: Summon 2 Walking Corpses. Costs <span color='#ff0000'>12</span> Blood." attacks/touch-zombie.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST summonghost 4 1 _"Bind Soul" _"Power: Summon a Ghost. Costs <span color='#ff0000'>22</span> Blood." attacks/wail.png (
        required_upgrades=raiseundead
    )}

    {ADD_VAMPIRE_UPGRADE_TO_LIST greatfeast 7 3 _"Great Feast" _"Power: permanently destroy the village you are standing on 
to gain <span color='#ff0000'>40</span> Blood and heal 25 HP.
(cannot feast during daytime)" icons/horror-redalt-3.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST batswarm 4 2 _"Bat Swarm" _"Power: Summon 4 Vampire Bats Costs <span color='#ff0000'>30</span> Blood.
(usable in bat form)" attacks/fangs-animal.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST cloakofdarkness 4 2 _"Cloak of Darkness" _"Power: gain nightstalk and skirmisher until your next turn. 
Costs <span color='#ff0000'>10</span> Blood." icons/fog-magenta-1.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST darkens 8 4 _"Engulf in Darkness" _"Power: gain darkens ability until your next turn.
Costs <span color='#ff0000'>20</span> Blood." icons/vampire-darken-aura.png ()}

    #TODO idea?: maybe an even more expensive upgrade to the temporary darken ability that gives permanent darken ability (and thus basically immunity to sunlight). Should be locked behind level 10, cost an obscene amount of skill points (like 10), and require "Engulf in Darkness" first, but removes the ability from the menu
    #UPD: permanent darken would probably be TOO op and invalidate core mechanics

#TODO: maybe add some bonus effect if the unit already had leadership? (the leadership object should still apply, just in case the unit levels up into a non-leadership unit)
    {ADD_VAMPIRE_UPGRADE_TO_LIST leadership 5 2 _"Leadership" _"Passive: gains <span color='#ffff99'>leadership</span> ability." icons/evil-eye-red-2.png ()}

    {ADD_VAMPIRE_UPGRADE_TO_LIST blood_capacity1 4 2 _"Blood Capacity I" _"Passive: +<span color='#ff0000'>10</span> max Blood." icons/blood-magic-1.png ()}
    {ADD_VAMPIRE_UPGRADE_TO_LIST blood_capacity2 7 3 _"Blood Capacity II" _"Passive: +<span color='#ff0000'>10</span> max Blood." icons/blood-magic-2.png (
        required_upgrades=blood_capacity1
    )}
    {ADD_VAMPIRE_UPGRADE_TO_LIST blood_capacity3 10 4 _"Blood Capacity III" _"Passive: +<span color='#ff0000'>15</span> max Blood." icons/blood-magic-3.png (
        required_upgrades=blood_capacity2
    )}
[/event]

[event]
    id=vampire_upgrade_effect_event
    first_time_only=no
    [switch]
        variable=tmp_vampire_current_upgrade_id
        [case]
            value=blood_capacity1
    		[modify_unit]
    		    [filter]
    		        id=$tmp_vampire_unit_id
    		    [/filter]
    		    {VARIABLE_OP vampirism_max_blood add 10}
    		[/modify_unit]
        [/case]
        [case]
            value=blood_capacity2
    		[modify_unit]
    		    [filter]
    		        id=$tmp_vampire_unit_id
    		    [/filter]
    		    {VARIABLE_OP vampirism_max_blood add 10}
    		[/modify_unit]
        [/case]
        [case]
            value=blood_capacity3
    		[modify_unit]
    		    [filter]
    		        id=$tmp_vampire_unit_id
    		    [/filter]
    		    {VARIABLE_OP vampirism_max_blood add 15}
    		[/modify_unit]
        [/case]
        [case]
            value=leadership
            [object]
                silent=yes
                duration=forever
                id=vampire_leadership
                take_only_once=no
                [filter]
                    id=$tmp_vampire_unit_id
                [/filter]
                [effect]
                    apply_to=new_ability
                    [abilities]
                        {ABILITY_LEADERSHIP}
                    [/abilities]
                [/effect]
            [/object]
        [/case]
        [case]
            value=agility
            [object]
                silent=yes
                duration=forever
                id=vampire_agility
                take_only_once=no
                [filter]
                    id=$tmp_vampire_unit_id
                [/filter]
                [effect]
                    apply_to=movement
                    increase=1
                [/effect]
            [/object]
        [/case]
        [case]
            value=batpowers1
            {VAMPIRE_UPGRADE_ALLOW_POWER_IN_BATFORM bloodsurge}
            {VAMPIRE_UPGRADE_ALLOW_POWER_IN_BATFORM batswarm}
            {VAMPIRE_UPGRADE_ALLOW_POWER_IN_BATFORM cloakofdarkness}
        [/case]
    [/switch]
    {CLEAR_VARIABLE tmp_vampire_current_upgrade_id}
    {CLEAR_VARIABLE tmp_vampire_unit_id}
[/event]

#define VAMPIRISM_CURRENT_UPGRADES_SUBMENU
	{HOPLITE_CREATE_CURRENT_UPGRADES_DIALOG_OPTIONS this_vampire}
	[message]
		speaker=narrator
		message=_"Current upgrades:"
       	[option]
       	    image="attacks/blank-attack.png"
       	    description=_"Return to menu"
       	    [command]
#       	        {CLEAR_VARIABLE vampirism_menu_active}
       	    [/command]
       	[/option]
        [insert_tag]
            name=option
            variable=vampirism_currentupgrades_options
        [/insert_tag]
	[/message]
	{CLEAR_VARIABLE vampirism_currentupgrades_options}
#enddef

#define VAMPIRISM_UPGRADE_SUBMENU
    {VARIABLE vampirism_menu_upgrade_active yes}
    [while]
        [variable]
            name=vampirism_menu_upgrade_active
            equals=yes
        [/variable]
        [do]
    #this_vampire variable is repeatedly cleared and stored again so that blood/upgrade values stay up-to-date
    {CLEAR_VARIABLE this_vampire}
    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=this_vampire
        kill=no
    [/store_unit]
	{HOPLITE_CREATE_CURRENT_UPGRADES_DIALOG_OPTIONS this_vampire}
	{HOPLITE_CREATE_AVAILABLE_UPGRADES_DIALOG_OPTIONS this_vampire}
	[message]
		speaker=narrator
        caption=_"Vampire Upgrade Menu"
		message=_"Vampire level: <span color='#ff0000'>$this_vampire.variables.vampirism_level|</span>
Vampire skill points: <span color='#ff0000'>$this_vampire.variables.vampirism_skillpoints|</span>

Select an upgrade."
       	[option]
       	    image="attacks/blank-attack.png"
       	    description=_"Return to menu"
       	    [command]
                {CLEAR_VARIABLE vampirism_menu_upgrade_active}
       	    [/command]
       	[/option]
        [insert_tag]
            name=option
            variable=vampirism_available_upgrades_options
        [/insert_tag]
	[/message]
	{CLEAR_VARIABLE vampirism_available_upgrades_options}
	{CLEAR_VARIABLE vampirism_currentupgrades_options}
        [/do]
    [/while]
#enddef

